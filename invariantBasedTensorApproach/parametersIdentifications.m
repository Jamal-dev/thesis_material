%% load data
clc;
[T,epsMatrix,sigDevMatrix,sigMatrix]=readData();
    
%%
ai = [1;0;0];
sprev = rng(0,'v5uniform');
[I1barList,I2barList, ...
            I3barList, ...
            I4barList,I5barList, ...
            CbarList,a0xa0List, ...
            Base5List, ...
            CList, ...
            inv_CList, ...
            FbarList, ...
            FList ...
            ] ...
            =get_requiredValues(epsMatrix,ai);
% params_0 = rand(1,15);
% error = objective(params_0,I1barList,I2barList, ...
%                 I3barList,I4barList,I5barList...
%                 ,CbarList,inv_CList, ...
%                 FList,CList, ...
%                 a0xa0List, ...
%                 Base5List,sigMatrix);
%% Particle swarm
lb = [0.0,0.0,-inf,-inf,-inf,-inf,-inf,-inf,-inf,-inf];
ub = [inf,inf,inf,inf,inf,inf,inf,inf,inf,inf];
objFun = @(params)objective(params,I1barList,I2barList, ...
                I3barList,I4barList,I5barList...
                ,CbarList,inv_CList, ...
                FList,CList, ...
                a0xa0List, ...
                Base5List,sigMatrix);

% Set up the options for the PSO algorithm
% ,'Display', 'iter'
options = optimoptions('particleswarm','SwarmSize',100 ...
    ,'MaxIterations',10000000, ...
    'MaxStallIterations',5000, ...
    'PlotFcn','pswplotbestf', ...
    'HybridFcn','fmincon');

% Run the PSO algorithm
% num_variables = 19;
% [x_min, f_min,exitflag,output] = particleswarm(objFun, num_variables, lb, ub, options  ) % 1 variable
% writematrix(x_min,['current_x_min_' num2str(num_variables) '.csv'])
%% fmincon
options = optimoptions('fmincon', ...
    'StepTolerance', 0, 'ConstraintTolerance', 0, ...
    'Display', 'iter', ...
    'MaxFunctionEvaluations', 10000000, ...
    'MaxIterations',10e6);
initialParams = readmatrix('current_x_min_23.csv');
initialParams = [initialParams zeros(1,2)];
[optimalParams, fval] = fmincon(objFun, initialParams, [], [], [], [], lb, ub, [], options);
%%






















